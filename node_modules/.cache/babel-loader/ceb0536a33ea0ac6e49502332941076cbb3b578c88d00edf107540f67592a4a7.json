{"ast":null,"code":"var _jsxFileName = \"/Users/ozgealpaslan/Desktop/allthereact/src/components/bookingForm/BookingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './bookingForm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingForm = () => {\n  _s();\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [guests, setGuests] = useState(1);\n  const [occasion, setOccasion] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const availableTimes = [\"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\"];\n  const checkTimeAvailability = selectedTime => {\n    return availableTimes.includes(selectedTime);\n  };\n  const handleDateChange = e => setDate(e.target.value);\n  const handleTimeChange = e => setTime(e.target.value);\n  const handleGuestsChange = e => setGuests(e.target.value);\n  const handleOccasionChange = e => setOccasion(e.target.value);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (date && time && guests && occasion && checkTimeAvailability(time)) {\n      setFeedback('Your reservation submitted successfully.');\n      setIsSubmitted(true);\n    } else {\n      setFeedback('Please ensure all fields are filled correctly and the selected time is available.');\n      setIsSubmitted(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"reservation-header\",\n      children: \"Restaurant Booking Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"reservation-form\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"res-date\",\n        children: \"Choose date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"res-date\",\n        value: date,\n        onChange: handleDateChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"res-time\",\n        children: \"Choose time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"res-time\",\n        value: time,\n        onChange: handleTimeChange,\n        required: true,\n        children: availableTimes.map((time, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: time\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"guests\",\n        children: \"Number of guests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"guests\",\n        value: guests,\n        onChange: handleGuestsChange,\n        min: \"1\",\n        max: \"10\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"occasion\",\n        children: \"Occasion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"occasion\",\n        value: occasion,\n        onChange: handleOccasionChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Please select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Birthday\",\n          children: \"Birthday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Anniversary\",\n          children: \"Anniversary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Make Your Reservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `feedback-message ${isSubmitted ? 'success' : 'error'}`,\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingForm, \"Wel3P9Kt3ZrRFK040b5gOD/fhvs=\");\n_c = BookingForm;\nexport default BookingForm;\n\n// If available times will taken from an API:\n\n/*  const [availableTimes, setAvailableTimes] = useState([]);\n\n    useEffect(() => {\n        // Example function to fetch available times\n        const fetchAvailableTimes = async () => {\n            try {\n                // Simulating a fetch call to an API\n                const response = await fetch('https://example.com/api/available-times');\n                const times = await response.json();\n                setAvailableTimes(times);\n            } catch (error) {\n                console.error(\"Failed to fetch times:\", error);\n            }\n        };\n\n        fetchAvailableTimes();\n    }, []); // Empty dependency array means this runs once on mount */\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BookingForm","_s","date","setDate","time","setTime","guests","setGuests","occasion","setOccasion","feedback","setFeedback","isSubmitted","setIsSubmitted","availableTimes","checkTimeAvailability","selectedTime","includes","handleDateChange","e","target","value","handleTimeChange","handleGuestsChange","handleOccasionChange","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","htmlFor","type","id","onChange","required","map","index","min","max","_c","$RefreshReg$"],"sources":["/Users/ozgealpaslan/Desktop/allthereact/src/components/bookingForm/BookingForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './bookingForm.scss';\n\nconst BookingForm = () => {\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [guests, setGuests] = useState(1);\n  const [occasion, setOccasion] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const availableTimes = [\"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\"];\n\n  const checkTimeAvailability = (selectedTime) => {\n    return availableTimes.includes(selectedTime);\n  };\n\n  const handleDateChange = (e) => setDate(e.target.value);\n  const handleTimeChange = (e) => setTime(e.target.value);\n  const handleGuestsChange = (e) => setGuests(e.target.value);\n  const handleOccasionChange = (e) => setOccasion(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (date && time && guests && occasion && checkTimeAvailability(time)) {\n      setFeedback('Your reservation submitted successfully.');\n      setIsSubmitted(true);\n    } else {\n      setFeedback('Please ensure all fields are filled correctly and the selected time is available.');\n      setIsSubmitted(false);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h1 className=\"reservation-header\">Restaurant Booking Form</h1>\n      <form className=\"reservation-form\" onSubmit={handleSubmit} noValidate>\n        <label htmlFor=\"res-date\">Choose date</label>\n        <input\n          type=\"date\"\n          id=\"res-date\"\n          value={date}\n          onChange={handleDateChange}\n          required\n        />\n        <label htmlFor=\"res-time\">Choose time</label>\n        <select id=\"res-time\" value={time} onChange={handleTimeChange} required>\n          {availableTimes.map((time, index) => (\n            <option key={index} value={time}>{time}</option>\n          ))}\n        </select>\n        <label htmlFor=\"guests\">Number of guests</label>\n        <input\n          type=\"number\"\n          id=\"guests\"\n          value={guests}\n          onChange={handleGuestsChange}\n          min=\"1\"\n          max=\"10\"\n          required\n        />\n        <label htmlFor=\"occasion\">Occasion</label>\n        <select id=\"occasion\" value={occasion} onChange={handleOccasionChange} required>\n          <option value=\"\">Please select</option>\n          <option value=\"Birthday\">Birthday</option>\n          <option value=\"Anniversary\">Anniversary</option>\n        </select>\n        <button type=\"submit\">Make Your Reservation</button>\n        {feedback && (\n          <p className={`feedback-message ${isSubmitted ? 'success' : 'error'}`}>\n            {feedback}\n          </p>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default BookingForm;\n\n\n// If available times will taken from an API:\n\n/*  const [availableTimes, setAvailableTimes] = useState([]);\n\n    useEffect(() => {\n        // Example function to fetch available times\n        const fetchAvailableTimes = async () => {\n            try {\n                // Simulating a fetch call to an API\n                const response = await fetch('https://example.com/api/available-times');\n                const times = await response.json();\n                setAvailableTimes(times);\n            } catch (error) {\n                console.error(\"Failed to fetch times:\", error);\n            }\n        };\n\n        fetchAvailableTimes();\n    }, []); // Empty dependency array means this runs once on mount */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}