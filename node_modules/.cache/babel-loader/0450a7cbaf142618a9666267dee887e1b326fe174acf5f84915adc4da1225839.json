{"ast":null,"code":"var _jsxFileName = \"/Users/ozgealpaslan/Desktop/allthereact/src/components/form/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './form.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    user_first_name: '',\n    user_last_name: '',\n    user_email: '',\n    user_password: '',\n    user_password_confirm: ''\n  });\n  const [formValid, setFormValid] = useState(false);\n  const [fieldValidity, setFieldValidity] = useState({\n    user_email: true,\n    // Assuming fields are valid by default\n    user_password: true,\n    user_confirm_password: true\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Assume validation passes initially, then check specific cases\n    let isValid = true;\n    if (name === \"user_email\") {\n      isValid = /\\S+@\\S+\\.\\S+/.test(value); // Simple email regex validation\n    } else if (name === \"user_password\" || name === \"user_confirm_password\") {\n      // Ensure both passwords are equal and at least 8 characters long\n      isValid = value.length >= 8 && formData.user_password === formData.user_confirm_password;\n    }\n\n    // Update field validity based on the current field's validation\n    setFieldValidity(prevValidity => ({\n      ...prevValidity,\n      [name]: isValid\n    }));\n\n    // Only update form data if the field is valid to avoid invalid data being stored\n    if (isValid) {\n      setFormData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n\n    // Call validateForm to update overall form validity\n    validateForm();\n  };\n  const validateForm = () => {\n    const isValid = formData.user_first_name && formData.user_last_name && /\\S+@\\S+\\.\\S+/.test(formData.user_email) && formData.user_password && formData.user_password.length >= 8 && formData.user_password === formData.user_confirm_password;\n    setFormValid(isValid);\n  };\n\n  // Call ValidateForm on evry input change event\n\n  const handleBlur = () => {\n    validateForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"signUp-header\",\n      children: \"Sign Up Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signUp-form\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user_first_name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user_first_name\",\n          name: \"user_first_name\",\n          required: true,\n          onChange: handleInputChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user_last_name\",\n          children: \"Last  Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user_last_name\",\n          name: \"user_last_name\",\n          required: true,\n          onChange: handleInputChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user_email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"user_email\",\n          name: \"user_email\",\n          required: true,\n          onChange: handleInputChange,\n          onBlur: handleBlur,\n          className: fieldValidity.user_email ? 'input-valid' : 'input-invalid'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user_password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"user_password\",\n          name: \"user_password\",\n          required: true,\n          minLength: 6,\n          onChange: handleInputChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user_confirm_password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"user_confirm_password\",\n          name: \"user_confirm_ password\",\n          onChange: handleInputChange,\n          onBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !formValid,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"WTqRjrLuUdPkZfQPWrZAofvT0X4=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","user_first_name","user_last_name","user_email","user_password","user_password_confirm","formValid","setFormValid","fieldValidity","setFieldValidity","user_confirm_password","handleInputChange","e","name","value","target","isValid","test","length","prevValidity","prevData","validateForm","handleBlur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","htmlFor","type","id","required","onChange","onBlur","minLength","disabled","_c","$RefreshReg$"],"sources":["/Users/ozgealpaslan/Desktop/allthereact/src/components/form/Form.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './form.scss';\n\nconst Form = () => {\n  const [formData, setFormData] = useState({\n    user_first_name:'',\n    user_last_name:'',\n    user_email:'',\n    user_password:'',\n    user_password_confirm:'',\n  })\n\n  const [formValid, setFormValid] = useState(false);\n  const [fieldValidity, setFieldValidity] = useState({\n    user_email: true, // Assuming fields are valid by default\n    user_password: true,\n    user_confirm_password: true,\n  });\n  \n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n  \n    // Assume validation passes initially, then check specific cases\n    let isValid = true;\n  \n    if (name === \"user_email\") {\n      isValid = /\\S+@\\S+\\.\\S+/.test(value); // Simple email regex validation\n    } else if (name === \"user_password\" || name === \"user_confirm_password\") {\n      // Ensure both passwords are equal and at least 8 characters long\n      isValid = value.length >= 8 && formData.user_password === formData.user_confirm_password;\n    }\n  \n    // Update field validity based on the current field's validation\n    setFieldValidity((prevValidity) => ({\n      ...prevValidity,\n      [name]: isValid,\n    }));\n  \n    // Only update form data if the field is valid to avoid invalid data being stored\n    if (isValid) {\n      setFormData((prevData) => ({\n        ...prevData,\n        [name]: value,\n      }));\n    }\n  \n    // Call validateForm to update overall form validity\n    validateForm();\n  };\n  \n\n  const validateForm = () => {\n    const isValid = formData.user_first_name && formData.user_last_name && /\\S+@\\S+\\.\\S+/.test(formData.user_email) &&\n      formData.user_password && formData.user_password.length >= 8 && formData.user_password === formData.user_confirm_password;\n  \n    setFormValid(isValid);\n  };\n  \n  // Call ValidateForm on evry input change event\n\n  const handleBlur = () => {\n    validateForm();\n  }\n  return (\n    <div className=\"form-container\">\n        <h1 className=\"signUp-header\">Sign Up Form</h1>\n        <form className=\"signUp-form\" onSubmit = {(e) => e.preventDefault()}>\n            <div>\n              {/* Inputs updated to include onChange and onBlur */}\n            <label htmlFor=\"user_first_name\">First Name</label>\n            <input type=\"text\" id=\"user_first_name\" name=\"user_first_name\" required onChange={handleInputChange} onBlur={handleBlur}/>\n            </div>\n            <div>\n            <label htmlFor=\"user_last_name\">Last  Name</label>\n            <input type=\"text\" id=\"user_last_name\" name=\"user_last_name\" required onChange={handleInputChange} onBlur={handleBlur}/>\n            </div>\n            <div>\n            <label htmlFor=\"user_email\">Email</label>\n            <input type=\"email\" id=\"user_email\" name=\"user_email\" required onChange={handleInputChange} onBlur={handleBlur} className={fieldValidity.user_email ? 'input-valid' : 'input-invalid'}/>\n            </div>\n            <div>\n            <label htmlFor=\"user_password\">Password</label>\n            <input type=\"password\" id=\"user_password\" name=\"user_password\" required minLength={6} onChange={handleInputChange} onBlur={handleBlur}/>  \n            </div>\n            <div>\n            <label htmlFor=\"user_confirm_password\">Confirm Password</label>\n            <input type=\"password\" id=\"user_confirm_password\" name=\"user_confirm_ password\" onChange={handleInputChange} onBlur={handleBlur}/>  \n            </div>\n            <div>\n                <button type=\"submit\" disabled={!formValid}>Sign Up</button>\n            </div>\n        </form>\n    </div>\n  )\n}\n\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}