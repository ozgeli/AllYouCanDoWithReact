{"ast":null,"code":"var _jsxFileName = \"/Users/ozgealpaslan/Desktop/allthereact/src/components/bookingForm/BookingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./bookingForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingForm = () => {\n  _s();\n  // State for each form field\n  const [date, setDate] = useState(\" \");\n  const [time, setTime] = useState(\" \");\n  const [guests, setGuests] = useState(1);\n  const [occasion, setOccasion] = useState(\" \");\n  const [feedback, setFeedback] = useState(\" \");\n  const [isSubmitted, setIsSubmitted] = useState(\" \");\n\n  //State for available times - If available times are given ans set and change by the user input\n  const [availableTimes, setAvailableTimes] = useState([\"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\"]);\n  // In a real app, It could be checked against a database or API\n  const checkTimeAvailability = selectedTime => {\n    return availableTimes.includes(selectedTime);\n  };\n\n  //Handles for each form field\n\n  const handleDateChange = e => setDate(e.target.value);\n  const handleTimeChange = e => setTime(e.target.value);\n  const handleGuestsChange = e => setGuests(e.target.value);\n  const handleOccasionChange = e => setOccasion(e.target.value);\n\n  //Form Submit Handle\n  const handleSubmit = e => {\n    e.prevent.Default();\n    if (checkTimeAvailability(time)) {\n      setFeedback('Your reservation submitted successfully.');\n    }\n    console.log({\n      date,\n      time,\n      guests,\n      occasion\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"reservation-header\",\n      children: \"Reservation Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"reservation-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"res-date\",\n        children: \" Choose date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"res-date\",\n        value: date,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"res-time\",\n        children: \"Choose time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"res-time\",\n        value: time,\n        onChange: handleTimeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"17:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"18:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"19:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"20:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"21:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"22:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"guests\",\n        children: \"Number of guests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"1\",\n        min: \"1\",\n        max: \"10\",\n        id: \"guests\",\n        value: guests,\n        onChange: handleGuestsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"occasion\",\n        children: \"Occasion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"occasion\",\n        value: occasion,\n        onChange: handleOccasionChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Birthday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Anniversary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Make Your Reservation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingForm, \"qHwlQFiOx8DQ+lpAH9cZxdVkgwY=\");\n_c = BookingForm;\nexport default BookingForm;\n\n// If available times will taken from an API:\n\n/*  const [availableTimes, setAvailableTimes] = useState([]);\n\n    useEffect(() => {\n        // Example function to fetch available times\n        const fetchAvailableTimes = async () => {\n            try {\n                // Simulating a fetch call to an API\n                const response = await fetch('https://example.com/api/available-times');\n                const times = await response.json();\n                setAvailableTimes(times);\n            } catch (error) {\n                console.error(\"Failed to fetch times:\", error);\n            }\n        };\n\n        fetchAvailableTimes();\n    }, []); // Empty dependency array means this runs once on mount */\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BookingForm","_s","date","setDate","time","setTime","guests","setGuests","occasion","setOccasion","feedback","setFeedback","isSubmitted","setIsSubmitted","availableTimes","setAvailableTimes","checkTimeAvailability","selectedTime","includes","handleDateChange","e","target","value","handleTimeChange","handleGuestsChange","handleOccasionChange","handleSubmit","prevent","Default","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","min","max","_c","$RefreshReg$"],"sources":["/Users/ozgealpaslan/Desktop/allthereact/src/components/bookingForm/BookingForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./bookingForm.scss\";\n\nconst BookingForm = () => {\n  // State for each form field\n  const [date, setDate] = useState(\" \");\n  const [time, setTime] = useState(\" \");\n  const [guests, setGuests] = useState(1);\n  const [occasion, setOccasion] = useState(\" \");\n  const [feedback, setFeedback] = useState(\" \");\n  const [isSubmitted, setIsSubmitted] = useState(\" \");\n\n\n  //State for available times - If available times are given ans set and change by the user input\n  const [availableTimes, setAvailableTimes] = useState([\"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\",\"22:00\"]);\n// In a real app, It could be checked against a database or API\n  const checkTimeAvailability = (selectedTime) => {\n\n    return availableTimes.includes(selectedTime);\n  };\n\n\n\n  //Handles for each form field\n\n  const handleDateChange = (e) => setDate(e.target.value);\n  const handleTimeChange = (e) => setTime(e.target.value);\n  const handleGuestsChange = (e) => setGuests(e.target.value);\n  const handleOccasionChange = (e) => setOccasion(e.target.value);\n\n  //Form Submit Handle\n  const handleSubmit = (e) => {\n    e.prevent.Default();\n    if (checkTimeAvailability(time)){\n        setFeedback('Your reservation submitted successfully.')\n    }\n    console.log({ date, time, guests, occasion });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h1 className=\"reservation-header\">Reservation Form</h1>\n      <form className=\"reservation-form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"res-date\"> Choose date</label>\n        <input\n          type=\"date\"\n          id=\"res-date\"\n          value={date}\n          onChange={handleDateChange}\n        />\n\n        <label htmlFor=\"res-time\">Choose time</label>\n        <select id=\"res-time\" value={time} onChange={handleTimeChange}>\n          <option>17:00</option>\n          <option>18:00</option>\n          <option>19:00</option>\n          <option>20:00</option>\n          <option>21:00</option>\n          <option>22:00</option>\n        </select>\n\n        <label htmlFor=\"guests\">Number of guests</label>\n        <input\n          type=\"number\"\n          placeholder=\"1\"\n          min=\"1\"\n          max=\"10\"\n          id=\"guests\"\n          value={guests}\n          onChange={handleGuestsChange}\n        />\n\n        <label htmlFor=\"occasion\">Occasion</label>\n        <select id=\"occasion\" value={occasion} onChange={handleOccasionChange}>\n          <option>Birthday</option>\n          <option>Anniversary</option>\n        </select>\n        <button type=\"submit\">Make Your Reservation</button>\n      </form>\n    </div>\n  );\n};\n\nexport default BookingForm;\n\n// If available times will taken from an API:\n\n/*  const [availableTimes, setAvailableTimes] = useState([]);\n\n    useEffect(() => {\n        // Example function to fetch available times\n        const fetchAvailableTimes = async () => {\n            try {\n                // Simulating a fetch call to an API\n                const response = await fetch('https://example.com/api/available-times');\n                const times = await response.json();\n                setAvailableTimes(times);\n            } catch (error) {\n                console.error(\"Failed to fetch times:\", error);\n            }\n        };\n\n        fetchAvailableTimes();\n    }, []); // Empty dependency array means this runs once on mount */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}